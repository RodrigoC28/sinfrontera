openapi: 3.0.0
info:
  title: SinFrontera API
  description: API em OpenAPi 3.0 para o Projeto Final de Programação III do curso de Multimédia
  version: 1.0.0
servers:
  - url: http://localhost:5000
paths:
  /Utilizador:
    get:
      tags: 
        - Utilizador
      summary: Read all utilizador 
      responses:
        '200':
          description: List all utilizadores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utilizador'
    post:
      tags: 
        - Utilizador
      summary: Create new Utilizador
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utilizador'
      responses:
        '201':
          description: Utilizador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utilizador'

  /Utilizador/{id}:
    get:
      tags: 
        - Utilizador
      summary: Get Utilizador by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The Utilizador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utilizador'           
    put:
      tags: 
        - Utilizador
      summary: Update Utilizador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utilizador'
      responses:
        '200':
          description: Viagem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utilizador'

    delete:
      tags: 
        - Utilizador
      summary: Delete Utilizador
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Utilizador deleted successfully

  /Viagem:
    get:
      tags: 
        - Viagem
      summary: Read all Viagens
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Viagem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Viagem'

    post:
      tags: 
        - Viagem
      summary: Create new Viagem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Viagem'
      responses:
        '201':
          description: Viagem_paragem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Viagem'

  /Viagem/{id}:
    get:
      tags: 
        - Viagem
      summary: Get Viagem by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The Viagem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Viagem' 

    put:
      tags: 
        - Viagem
      summary: Update Viagem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Viagem'
      responses:
        '200':
          description: Viagem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Viagem'
    delete:
      tags: 
        - Viagem
      summary: Delete Viagem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Viagem deleted successfully          
    
  /Destinos:
    get:
      tags: 
        - Destinos
      summary: Read all Destinos
      responses:
        '200':
          description: Destinos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Destinos'
                  
    post:
      tags: 
        - Destinos 
      summary: Create new Destinos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Destinos'
      responses:
        '201':
          description: Destinos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destinos'

  /Destinos/{id}:
    get:
      tags: 
        - Destinos
      summary: Get Destinos by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The Destinos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destinos' 

    put:
      tags: 
        - Destinos
      summary: Update Destinosm
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Destinos'
      responses:
        '200':
          description: Destinos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destinos'
    
    delete:
      tags: 
        - Destinos
      summary: Delete Destinos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Destinos
                
  /Venda:
    get:
      tags: 
        - Venda
      summary: Read all Venda
      responses:
        '200':
          description: Venda
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Venda'
    post:
      tags: 
        - Venda
      summary: Create new Venda
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venda'
      responses:
        '201':
          description: Venda
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venda'

  /Venda/{id}:
    get:
      tags: 
        - Venda
      summary: Get Venda by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The Venda
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venda' 
      
    put:
      tags: 
        - Venda
      summary: Update Venda
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venda'
      responses:
        '200':
          description: Venda
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venda'
    
    delete:
      tags: 
        - Venda
      summary: Delete Venda
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Venda

  /Autocarro:
    get:
      tags: 
        - Autocarro
      summary: Read all Autocarro
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Autocarro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autocarro'
    post:
      tags: 
        - Autocarro
      summary: Create new Autocarro
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Autocarro'
      responses:
        '201':
          description: Autocarro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autocarro'

  /Autocarro/{id}:
    get:
      tags: 
        - Autocarro
      summary: Get Autocarro by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The Autocarro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autocarro' 

    put:
      tags: 
        - Autocarro
      summary: Update Autocarro
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Autocarro'
      responses:
        '200':
          description: Autocarro
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autocarro'
    delete:
      tags: 
        - Autocarro
      summary: Delete Autocarro
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Autocarro

  /Paragem:
    get:
      tags: 
        - Paragem
      summary: Read all Paragem
      responses:
        '200':
          description: Paragem
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Paragem'
    post:
      tags: 
        - Paragem
      summary: Create new Venda
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Paragem'
      responses:
        '201':
          description: Venda
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venda'

  /Paragem/{id}:
    get:
      tags: 
        - Paragem
      summary: Get Paragem by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The Paragem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paragem' 
      
    put:
      tags: 
        - Paragem
      summary: Update Paragem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Paragem'
      responses:
        '200':
          description: Paragem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paragem'
    
    delete:
      tags: 
        - Paragem
      summary: Delete Paragem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Paragem
          
  /Condutor:
    get:
      tags: 
        - Condutor
      summary:  Read all Condutor
      responses:
        '200':
          description: Condutor
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Condutor'
    post:
      tags: 
        - Condutor
      summary: Create new Condutor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condutor'
      responses:
        '201':
          description: Condutor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condutor'

  /Condutor/{id}:
    get:
      tags: 
        - Condutor
      summary: Get Condutor by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The Condutor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condutor' 
                
    put:
      tags: 
        - Condutor
      summary: Update Condutor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condutor'
      responses:
        '200':
          description: Condutor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condutor'
    delete:
      tags: 
        - Condutor
      summary: Delete Condutor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Condutor
          
          
components:
  schemas:
    Utilizador:
      type: object
      properties:
        id_utilizador: 
          type: integer
        tipo_utilizador:
          type: string
          format: varchar (50)
        nome:
          type: string
          format: varchar (50)
        sobrenome:
          type: string
          format: varchar (50)
        email:
          type: string
          format: varchar (100)
        password:
          type: string
          format: varchar (255)
        telemovel:
          type: string
          format: varchar (15)
        dta_registo:
          type: string
          format: date-time 
        dta_atualizacao:
          type: string
          format: date-time 
          
    Viagem:
      type: object
      properties:
        id_viagem:
          type: integer
        id_autocarros:
          type: integer
        data: 
          type: string
          format: date
        hora_partida: 
          type: string 
          format: time 
        hora_chegada:
          type: string
          format: time
        preco: 
          type: string 
          format: decimal
        dta_registo:
          type: string
          format: date-time 
        dta_atualizacao:
          type: string
          format: date-time 

    Destinos:
      type: object
      properties:
        id_viagem:
          type: integer
        id_paragem:
          type: integer
        hora: 
          type: string
          format: time
        dta_registo:
          type: string
          format: date-time  
        dta_atualizacao:
          type: string
          format: date-time  
          
    Venda: 
      type: object
      properties: 
        id_viagem: 
          type: integer
        id_utilizador: 
          type: integer
        mtd_pagamento: 
          type: string
          format: varchar (50)
        n_passageiros: 
          type: integer
        dta_registo: 
          type: string
          format: date-time  
        dta_atualizacao: 
          type: string
          format: date-time  
  
    Paragem: 
      type: object
      properties: 
        id_paragem:
          type: integer
        nome: 
          type: string
          format: varchar (255)
        coordenadas:
          type: string 
          format: varchar (255)
        dta_registo:
          type: string
          format: date-time  
        dta_atualizacao:
          type: string
          format: date-time 
    
    Autocarro: 
      type: object 
      properties: 
        id_autocarro: 
          type: integer
        matricula: 
          type: string
          format: varchar (255)
        capacidade:
          type: integer
        dta_registo:
          type: string
          format: date-time  
        dta_atualizacao:
          type: string
          format: date-time  

    Condutor: 
      type: object
      properties: 
        id_condutor:
          type: integer
        id_viagem: 
          type: integer
        nome:
          type: string 
          format: varchar (255)
        genero:
          type: string 
          format: varchar (10)
        idade:
          type: integer  
        dta_registo:
          type: string
          format: date-time  
        dta_atualizacao:
          type: string
          format: date-time 
            
            